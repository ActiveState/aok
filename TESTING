NOTE: See note/JavaIntegrationTestSetup for a complete, from-scratch, set of
Java Integration Test instructions. Old instructions follow:

== Java Integration Tests (old instructions, see above NOTE)

You must have ActiveState's UAA repo cloned next to AOK in the filesystem on
your workstation. There are probably some java prereqs also (like maven).

I (aocole) am using maven 3.0.4 and java 1.6.0_33.

Please update this as you discover what else needs to be installed for the
tests to run.

You need to have the AOK_TEST_VM environment variable set according to the network
name of your VM. For instance:

  export AOK_TEST_VM=stackato-abcd.local

On the Stackato VM being used for testing, run:

  cd /s/code/aok
  bundle exec rake test:setup

to configure the VM. Wait for the VM to be fully running again according to
`kato status`.

On your workstation, run `bundle exec rake test:integration` to run the tests.
Use `bundle exec rake test:results` to view the results (failures and skips)
of the test.

If the tests don't run or a large portion of them fail:

 * Ensure that `make truststore` works
 * Ensure that you have run the setup step on the VM and that AOK and CCNG
   restarted successfully
 * Ensure that you have run `rake rebuild` to rebuild the UAA test framework


== RSpec unit tests

The rspec tests are to be run in situ on the VM. There is some futzing required
to set up the database. You have to copy your production db config overwriting
the test config:

    kato config get --yaml aok database_environment/production |\
    kato config set --yaml aok database_environment/test

and change the db name to something like aok_test:

    kato config set aok database_environment/test/database aok_test

Then set up the database:

    RACK_ENV=test bundle exec rake db:recreate

and you're ready to run the tests:

    bundle exec rake spec
